#!/bin/bash
# Install a series of APT packages, updating the Apt repo if its older than a day
#
# Usage: ./utils/apt-install [--lazy] [--header text] <packages...>
#
# -l, --lazy          Exit politely if all packages are already installed
#
# -h, --header <text> Print the given header only if an action is taken
#

[ -z "$INIT_READY" ] && source common

# Argument processing {{{
IS_LAZY=0
HEADER=""
PARAMS=()
while (( "$#" )); do
	case "$1" in
		-l|--lazy)
			IS_LAZY=1
			shift
			;;
		-h|--header)
			HEADER="$2"
			shift
			shift
			;;
		--) # end argument parsing
			shift
			break
			;;
		-*|--*=) # unsupported flags
			PARAMS+=("$1")
			shift
			;;
		*) # preserve positional arguments
			PARAMS+=("$1")
			shift
			;;
	esac
done
# }}}

if [ "$IS_LAZY" == 1 ]; then
	# Lazy mode {{{
	NEED_INSTALL=0
	if [ `INIT apt-has "$@"` != 1 ]; then
		NEED_INSTALL=1
	fi
	# }}}
fi

if [ ! -z `find /var/lib/apt/periodic/update-success-stamp -type f -mtime +1` ]; then
	INIT status "Need to update Apt database"
	sudo apt update
fi

# Actually do something?
if [[ "$IS_LAZY" == 0 || "$NEED_INSTALL" == 1 ]]; then

	# Output header if we got this far (with --lazy) or if the user asked for one
	if [ ! -z "$HEADER" ]; then
		INIT status "$HEADER"
	fi

	sudo apt install --assume-yes "${PARAMS[@]}"
fi
