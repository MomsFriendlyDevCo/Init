#!/bin/bash
# Install a series of APT packages, updating the Apt repo if its older than a day
#
# Usage: ./utils/apt-install [--lazy] [--header text] <packages...>
#
# -l, --lazy, --lazy-deb   Exit politely if all packages are already installed
#                          (As .deb files)
#
# -b, --lazy-bin           Exit politely if the packages are avaiable as binaries
#                          (as opposed to installed APT packages)
#
# -h, --header <text>      Print the given header only if an action is taken
#

[ -z "$INIT_READY" ] && source common

# Argument processing {{{
IS_LAZY_DEB=0
IS_LAZY_BIN=0
HEADER=""
PARAMS=()
while (( "$#" )); do
	case "$1" in
		-l|--lazy|--lazy-deb)
			IS_LAZY_DEB=1
			shift
			;;
		-b|--lazy-bin)
			IS_LAZY_BIN=1
			shift
			;;
		-h|--header)
			HEADER="$2"
			shift
			shift
			;;
		--) # end argument parsing
			shift
			break
			;;
		-*|--*=) # unsupported flags
			PARAMS+=("$1")
			shift
			;;
		*) # preserve positional arguments
			PARAMS+=("$1")
			shift
			;;
	esac
done
# }}}

if [[ "$IS_LAZY_DEB" == 1 || "$IS_LAZY_BIN" == 1 ]]; then
	# Lazy mode {{{

	if [[ "$IS_LAZY_DEB" == 1 && `INIT apt-has "${PARAMS[@]}"` == 1 ]]; then
		# Deb is installed - do nothing
		exit 0
	elif [[ "$IS_LAZY_BIN" == 1 && `INIT bin-available "${PARAMS[@]}"` == 1 ]]; then
		# Bin is available -  do nothing
		exit 0
	else
		INIT noop
	fi
	# }}}
fi

if [ ! -z `find /var/lib/apt/periodic/update-success-stamp -type f -mtime +1` ]; then
	INIT status "Need to update Apt database"
	sudo apt update
fi

# Actually do something?
# Output header if we got this far (with --lazy) or if the user asked for one
if [ ! -z "$HEADER" ]; then
	INIT status "$HEADER"
fi

sudo apt install --assume-yes "${PARAMS[@]}"
